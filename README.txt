Введение:

1. Работа выполнил студент группы БПИ217 Татауров Матвей.
2. Работа выполнена с использованием cLion, графики были построены в Excel.
3. Были выполнены все пункты условия.
4. В качестве четвёртого алгоритма была взята модификация алгоритма Дейкстры A-star(A*). 
5. Более подробные графики лежат в файлах results.xlsx(статистика по вершинам) и results2.xlsx(статистика по рёбрам)
6. В целом, данные на графиках по рёбрам и по вершинам практически идентичны, существенных отличий нет. Поэтому в данном отчёте представлены лишь графики со статистикой по вершинам – их можно смело менять на графики со статистикой по рёбрам, и ничего не поменяется.
 

1. Дейкстра:
- Время растёт приблизительно линейно(гораздо более плавно, чем у двух других обязательных алгоритмов) с увеличением числа вершин в графе для всех трёх типов графов, особенно для более разреженных.
- Наибольшее время выполнения - для полных графов, наименьшее - для разреженных.
- Алгоритм прекрасно подходит для всех графов, которые были протестированы.
 

2. Флойд-Уоршелл:
- Время выполнения растёт кубически с увеличением числа вершин в графе для всех трёх типов графов.
- Данный алгоритм является наиболее медленным из рассмотренных вариантов и крайне неэффективен для графов с большим числом вершин.
- Время одинаково для всех типов графов с отличиями на уровне погрешности.
 

3. Беллман-Форд:
- Время выполнения растёт нелинейно, для  полных графов – ближе к кубическому, для дерева – чуть ближе к линии, но в любом случае он не является эффективным.
- По времени выполнения находится между Флойдом-Уоршеллом и Дейкстрой, приближаясь к последнему по мере уменьшения плотности графа.
- Однако этот алгоритм может обрабатывать отрицательные веса рёбер, в отличие от других, так что может быть применим в ряде случаев.
 

4. A-star:

- Является модификацией алгоритма Дейкстры, поэтому работает ещё эффективнее.
- В качестве эвристики взят модуль разности индексов текущей и целевой вершин, что не является самым лучшим выбором, но всё равно показывает неплохие результаты.
- Время выполнения растёт практически линейно.
- Хорошая производительность для всех типов графов, особенно для графов с пониженной и низкой плотностью.
 
НЕБОЛЬШОЕ ДОПОЛНЕНИЕ  
Порой на графиках случались подобные выбросы. Так как они встречались лишь на одном из алгоритмов, могу смело утверждать что где-то с вероятностью 0.95 это были фоновые процессы ОС, которые неожиданно включились именно в этот момент. Хотя, конечно, это может быть какой-тио неудачный график конкретно для этого алгоритма